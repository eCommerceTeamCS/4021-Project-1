require("knitr")
#traindir <- "C:/Users/swnathan/Documents/4y1s/sys4021/InClassR/Data/TrainData"
#sourcedir <-"C:/Users/swnathan/Documents/4y1s/sys4021/InClassR/RCode"
traindir <- "/Users/shaynecassidy/Desktop/4021/Data/TrainData"
sourcedir <-"/Users/shaynecassidy/Desktop/4021/RCode"
opts_knit$set(root.dir = sourcedir)
opts_chunk$set(warning=FALSE)
require("knitr")
#traindir <- "C:/Users/swnathan/Documents/4y1s/sys4021/InClassR/Data/TrainData"
#sourcedir <-"C:/Users/swnathan/Documents/4y1s/sys4021/InClassR/RCode"
traindir <- "/Users/shaynecassidy/Desktop/4021/Data/TrainData"
sourcedir <-"/Users/shaynecassidy/Desktop/4021/RCode"
opts_knit$set(root.dir = sourcedir)
opts_chunk$set(warning=FALSE)
Load data and combine data from 2001-2018 into totacts.
```{r}
# Source AccidentInput
source("AccidentInput.R")
# Source AccidentInput
setwd("/Users/shaynecassidy/Desktop/4021/RCode")
source("AccidentInput.R")
# list of data frames for each year of accident data
acts <- file.inputl(traindir)
# list of data frames for each year of accident data
acts <- file.inputl(traindir)
# Get a common set the variables
comvar <- intersect(colnames(acts[[1]]), colnames(acts[[8]]))
# the combined data frame
totacts <- combine.data(acts, comvar)
# the combined data frame
totacts <- combine.data(acts, comvar)
totacts$Casualty <- totacts$TOTKLD + totacts$TOTINJ
dmgbox <- boxplot(totacts$ACCDMG)
xdmg <- totacts[totacts$ACCDMG > dmgbox$stats[5],]
# Remove duplicates from xdmg and call new data frame xdmgnd
xdmgnd <- xdmg[!(duplicated(xdmg[, c("INCDTNO", "YEAR", "MONTH", "DAY", "TIMEHR",
"TIMEMIN")])),]
casbox <- boxplot(totacts$Casualty)
cas <- totacts[totacts$Casualty > casbox$stats[5],]
# Remove duplicates from cdmg and call new data frame cdmgnd
casnd <- cas[!(duplicated(cdmg[, c("INCDTNO", "YEAR", "MONTH", "DAY", "TIMEHR",
"TIMEMIN")])),]
# Remove duplicates from cdmg and call new data frame cdmgnd
casnd <- cas[!(duplicated(cas[, c("INCDTNO", "YEAR", "MONTH", "DAY", "TIMEHR",
"TIMEMIN")])),]
require("knitr")
require("knitr")
sourcedir <- "/Users/shaynecassidy/Desktop/4021/RCode"
datadir <- "/Users/shaynecassidy/Desktop/4021/Data/AirQualityUCI"
opts_knit$set(root.dir = sourcedir)
library(forecast)
library(forecast)
library(mtsdi)
library(MTS)
require("knitr")
sourcedir <- "/Users/shaynecassidy/Desktop/4021/RCode"
datadir <- "/Users/shaynecassidy/Desktop/4021/Data/AirQualityUCI"
opts_knit$set(root.dir = sourcedir)
library(forecast)
library(mtsdi)
library(MTS)
setwd(datadir)
airquality = read.csv('AirQualityUCI.csv')
setwd("/Users/shaynecassidy/Desktop/4021/Data/AirQualityUCI")
airquality = read.csv('AirQualityUCI.csv')
setwd("/Users/shaynecassidy/Desktop/4021/Data/AirQualityUCI")
require("knitr")
sourcedir <- "/Users/shaynecassidy/Desktop/4021/RCode"
datadir <- "/Users/shaynecassidy/Desktop/4021-Project-1/AirQualityUCI"
opts_knit$set(root.dir = sourcedir)
library(forecast)
library(mtsdi)
library(MTS)
require("knitr")
sourcedir <- "/Users/shaynecassidy/Desktop/4021/RCode"
datadir <- "/Users/shaynecassidy/Desktop/4021-Project-1/AirQualityUCI"
opts_knit$set(root.dir = sourcedir)
library(forecast)
library(mtsdi)
library(MTS)
# Load data and impute missing values
```{r, warning=FALSE}
setwd(datadir)
airquality = read.csv('AirQualityUCI.csv')
# replace -200 with NA
airquality[airquality == -200] <- NA
# convert integer type to numeric
intcols = c(4,5,7,8,9,10,11,12)
for(i in 1:length(intcols)){
airquality[,intcols[i]] <- as.numeric(airquality[,intcols[i]])
}
setwd(sourcedir)
# create new data frame with just CO and NO2
AQdata = airquality[,c(3,10)]
# impute missing air quality data
f <- ~ CO.GT. + NO2.GT.
t <- c(seq(1,dim(AQdata)[1],1))
i <- mnimput(f, AQdata, eps=1e-3, ts=TRUE, method='gam',
ga.control=list(formula=paste(names(AQdata)[c(1:3)],'~ns(t,2)')))
i <- mnimput(f, AQdata, eps=1e-3, ts=TRUE, method='gam',
ga.control=list(formula=paste(names(AQdata)[c(1:3)],'~ns(t,2)')))
# set airquality to imputed data
AQdata <- i$filled.dataset
# aggregate to daily maxima for model building
dailyAQ <- aggregate(AQdata, by=list(as.Date(airquality[,1],"%m/%d/%Y")), FUN=max)
